worker_processes  1;
user root;  
events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    gzip  on;
    real_ip_header     X-Forwarded-For;
    log_format jsonlog escape=json '{ "timestamp": "$time_iso8601", '
                     '"remote_addr": "$remote_addr", '
                     '"body_bytes_sent": $body_bytes_sent, '
                     '"request_time": $request_time, '
                     '"response_status": $status, '
                     '"request": "$request", '
                     '"request_method": "$request_method", '
                     '"host": "$host",'
                     '"content":"$content",'
                     '"upstream_cache_status": "$upstream_cache_status",'
                     '"upstream_addr": "$upstream_addr",'
                     '"http_x_forwarded_for": "$http_x_forwarded_for",'
                     '"http_referrer": "$http_referer", '
                     '"http_user_agent": "$http_user_agent" }';
    server {
        listen       80;
        charset utf-8;
        default_type text/html;
        location / {
            default_type text/html;
            index index.html;
        }
        location /sys/ {
           set $content "";
           if_modified_since off;
           etag off;
           add_header Cache-Control no-store;
           add_header Cache-Control must-revalidate;
           access_log  /usr/local/openresty/nginx/logs/access_test.log  jsonlog;
           access_by_lua_block {
                local args = ngx.req.get_uri_args()
                local info = {
                      id = args["id"] or "",
                      psnid = args["psnid"] or ""
                }
                local res = ngx.location.capture('/logs?id='..info.id..'&psnid='..info.psnid)
                ngx.var.content = res.body
           }
          empty_gif;
        }
        location /logs {
            content_by_lua_block {
                local args = ngx.req.get_uri_args()
                ngx.say(string.format("result is: %s,%s",args["id"],args["psnid"]))
            }
        }
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

    }
}
